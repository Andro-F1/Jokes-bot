#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Ukrainian Telegram Bot with Random Jokes, Magic 8-Ball, Who Are You Today Game, and Language Support
Uses pyTelegramBotAPI for Telegram integration
"""

import telebot
from telebot import types
import random
import os
import logging
import time
from typing import List, Dict, Set

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class UkrainianJokeBot:
    """Ukrainian Telegram bot with jokes, 8-ball, role game, and language support"""
    
    def __init__(self):
        # Get bot token from environment variables with fallback
        self.token = os.getenv("TELEGRAM_BOT_TOKEN", "7780156035:AAEz5429RugouRncofxQM9ub9lp7Q5HQNAU")
        
        # Initialize bot
        try:
            self.bot = telebot.TeleBot(self.token)
            logger.info("Bot initialized successfully")
        except Exception as e:
            logger.error(f"Failed to initialize bot: {e}")
            raise
        
        # Language settings and tracking
        self.user_languages = {}  # Store user language preferences
        self.used_jokes = {}  # Track used jokes per user
        self.last_roles = {}  # Track last roles to avoid repetition
        
        # Magic 8-ball answers for Ukrainian
        self.magic_answers_uk = [
            "–¢–∞–∫ ‚úÖ", "–ù—ñ ‚ùå", "–ú–æ–∂–ª–∏–≤–æ ü§î", "–ó–∞–ø–∏—Ç–∞–π —â–µ —Ä–∞–∑ üîÑ", "–Ø –Ω–µ –≤–ø–µ–≤–Ω–µ–Ω–∏–π üò∂",
            "–û—á–µ–≤–∏–¥–Ω–æ!", "100%", "–¢–æ–±—ñ —Ü–µ –Ω–µ —Å–ø–æ–¥–æ–±–∞—î—Ç—å—Å—è...", "–®–∞–Ω—Å–∏ –º–∞–ª—ñ, –∞–ª–µ —î.",
            "–¢–æ—á–Ω–æ –Ω—ñ!", "–ë–µ–∑—É–º–æ–≤–Ω–æ —Ç–∞–∫!", "–ö—Ä–∞—â–µ –Ω–µ –≤–∞—Ä—Ç–æ", "–ó—ñ—Ä–∫–∏ –∫–∞–∂—É—Ç—å —Ç–∞–∫",
            "–ú–æ—ó –¥–∂–µ—Ä–µ–ª–∞ –∫–∞–∂—É—Ç—å –Ω—ñ", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∏ —Ö–æ—Ä–æ—à—ñ", "–ó–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–µ–±–µ",
            "–ù–µ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É–π –Ω–∞ —Ü–µ", "–¢–∞–∫, –∞–ª–µ –±—É–¥—å –æ–±–µ—Ä–µ–∂–Ω–∏–π", "–°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ",
            "–í—Å–µ –º–æ–∂–ª–∏–≤–æ!", "–¢–∏ –∂–∞—Ä—Ç—É—î—à?", "–ù–∞–≤—ñ—Ç—å –Ω–µ –¥—É–º–∞–π!", "–ú—Ä—ñ–π –¥–∞–ª—ñ!",
            "–ö—É–ª—è –∫–∞–∂–µ: LOL", "–°–ø–∏—Ç–∞–π —É –º–∞–º–∏", "42 - –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –≤—Å–µ", "–ù–∞–≤–ø–∞–∫–∏!",
            "–¢—ñ–ª—å–∫–∏ –≤ —á–µ—Ç–≤–µ—Ä", "–ö–æ–ª–∏ —Å–æ–Ω—Ü–µ –∑–∞–π–¥–µ –Ω–∞ –∑–∞—Ö–æ–¥—ñ", "–ú–∞–≥—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î —Å—å–æ–≥–æ–¥–Ω—ñ",
            "–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Ç–µ–ª–µ—Ñ–æ–Ω —ñ —Å–ø–∏—Ç–∞–π –∑–Ω–æ–≤—É", "–ö—É–ª—è –¥—É–º–∞—î...", "–ü–æ–º–∏–ª–∫–∞ 404",
            "–°–ø—Ä–æ–±—É–π —ñ–Ω–∞–∫—à–µ —Å—Ñ–æ—Ä–º—É–ª—é–≤–∞—Ç–∏", "–¢–∞–∫, –∞–ª–µ –Ω—ñ", "–ù—ñ, –∞–ª–µ —Ç–∞–∫",
            "–ú–æ–∂–µ —ñ —Ç–∞–∫, –∞ –º–æ–∂–µ —ñ –Ω—ñ", "–ö—É–ª—è –Ω–∞ —Ç–µ—Ö–Ω—ñ—á–Ω–æ–º—É –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—ñ",
            "–°–ø–∏—Ç–∞–π —É –∫–æ—Ç–∞", "–¢—ñ–ª—å–∫–∏ —è–∫—â–æ —Ç–∞–Ω—Ü—é–≤–∞—Ç–∏–º–µ—à", "–ö–æ–ª–∏ —Å–≤–∏–Ω—ñ –ø–æ–ª–µ—Ç—è—Ç—å",
            "–ó—ñ—Ä–∫–∏ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å", "–ö—É–ª—è —Å–ø–∏—Ç—å", "–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂ –º—ñ–∑–∫–∏ —ñ —Å–ø–∏—Ç–∞–π –∑–Ω–æ–≤—É",
            "–û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –Ω—ñ!", "–û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ —Ç–∞–∫!", "–ú–æ–∂–ª–∏–≤–æ, –∞–ª–µ –Ω–∞–≤—Ä—è–¥ —á–∏",
            "–ö—É–ª—è –≤ –∑–ª–æ–º—É –Ω–∞—Å—Ç—Ä–æ—ó", "–ü–æ–∫–ª–∏—á –±–∞–±—É—Å—é", "–ù—ñ –∑–∞ —â–æ!",
            "–ó–∞ —Ç–≤–æ—ó–º –≤–ª–∞—Å–Ω–∏–º —Ä–∏–∑–∏–∫–æ–º", "–ö–æ–ª–∏ –∫–∞–∫—Ç—É—Å –ø–æ–ª–µ—Ç–∏—Ç—å", "–ü—Ä–æ—Å—Ç–æ LMAO",
            "–ù–µ –º–æ—î –¥—ñ–ª–æ", "–ó–∞–ø–∏—Ç–∞–π —Å–≤–æ—î —Å–≤—ñ–¥–æ–º–µ", "–ù—ñ –≤ —è–∫–æ–º—É —Ä–∞–∑—ñ!",
            "–ö—É–ª—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—Ü—ñ", "–ë—É–¥—å –ª–∞—Å–∫–∞ —ñ –Ω—ñ", "–ú–æ–∂–ª–∏–≤–æ —Ç–∞–∫, –∞ –º–æ–∂–ª–∏–≤–æ ‚Äî –∞–≤—Ç–æ–±—É—Å",
            "–ö—É–ª—è –≤ –æ—Ç–ø—É—Å–∫–µ", "–ó–∞–ø–∏—Ç–∞–π –≤ Google", "–ù—ñ–∫–æ–ª–∏ –Ω–µ –≥–æ–≤–æ—Ä–∏ –Ω—ñ–∫–æ–ª–∏"
        ]
        
        # Magic 8-ball answers for English  
        self.magic_answers_en = [
            "Yes ‚úÖ", "No ‚ùå", "Maybe ü§î", "Ask again üîÑ", "I'm not sure üò∂",
            "Obviously!", "100%", "You won't like it...", "Chances are small but exist.",
            "Definitely no!", "Absolutely yes!", "Better not", "Stars say yes",
            "My sources say no", "Outlook good", "It's up to you",
            "Don't count on it", "Yes, but be careful", "Try again later",
            "Everything is possible!", "Are you kidding?", "Not even close!", "Dream on!",
            "Ball says: LOL", "Ask your mom", "42 is the answer to everything", "Opposite!",
            "Only on Thursday", "When sun sets in the west", "Magic doesn't work today",
            "Flip your phone and ask again", "Ball is thinking...", "Error 404",
            "Try rephrasing", "Yes, but no", "No, but yes",
            "Maybe yes, maybe no", "Ball is under maintenance",
            "Ask the cat", "Only if you dance", "When pigs fly",
            "Stars are not responding", "Ball is sleeping", "Reboot brain and ask again",
            "Absolutely not!", "Absolutely yes!", "Maybe, but probably not",
            "Ball is in a bad mood", "Call your grandma", "Not a chance!",
            "At your own risk", "When cactus flies", "Just LMAO",
            "Not my business", "Ask your conscience", "In no way!",
            "Ball is on maintenance", "Please, just no", "Maybe yes, maybe bus",
            "Ball is on vacation", "Ask Google", "Never say never"
        ]

        # Ukrainian roles for "Who are you today" game
        self.roles_uk = [
            "ü•∑ –¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ ‚Äî –Ω—ñ–Ω–¥–∑—è, –∞–ª–µ –∑–∞–±—É–≤ –º–∞—Å–∫—É.",
            "ü¶∏‚Äç‚ôÇÔ∏è –¢–∏ —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π‚Ä¶ —Ç—ñ–ª—å–∫–∏ –±–µ–∑ —Å—É–ø–µ—Ä—Å–∏–ª–∏.",
            "üõå –¢–∏ —è–∫ –ø–æ–¥—É—à–∫–∞ ‚Äî –≤—Å—ñ —Ç–µ–±–µ –ª—é–±–ª—è—Ç—å, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ —Ö–æ—á—É—Ç—å —Å–ø–∞—Ç–∏.",
            "‚ö° –¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —è–∫ —Ä–æ–∑—Ä—è–¥–∂–µ–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω ‚Äî –≤—Å—ñ –Ω–µ—Ä–≤—É—é—Ç—å—Å—è, –∞–ª–µ –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–ª—è—Ç—å.",
            "üçï –¢–∏ —è–∫ –æ—Å—Ç–∞–Ω–Ω—ñ–π —à–º–∞—Ç–æ—á–æ–∫ –ø—ñ—Ü–∏ ‚Äî –≤—Å—ñ —Ö–æ—á—É—Ç—å, –∞–ª–µ –Ω—ñ—Ö—Ç–æ –Ω–µ –±–µ—Ä–µ.",
            "üé≤ –¢–∏ –≥–æ–ª–æ–≤–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å —É –≥—Ä—ñ –ø—ñ–¥ –Ω–∞–∑–≤–æ—é '–∂–∏—Ç—Ç—è'.",
            "üíæ –¢–∏ —è–∫ —Ñ–ª–µ—à–∫–∞ –Ω–∞ 2 –ì–ë ‚Äî —â–µ —ñ—Å–Ω—É—î—à, –∞–ª–µ –Ω—ñ–∫–æ–º—É –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω.",
            "üêí –¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ ‚Äî –º–∞–≤–ø–∞, —è–∫–∞ –¥–∏–≤–∏—Ç—å—Å—è –Ω–∞ –ª—é–¥–µ–π —ñ –¥—É–º–∞—î, —Ö—Ç–æ —Ç—É—Ç —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –µ–≤–æ–ª—é—Ü—ñ–æ–Ω–µ—Ä.",
            "üé≠ –¢–∏ –≥–æ–ª–æ–≤–Ω–∏–π –≥–µ—Ä–æ–π —Å–µ—Ä—ñ–∞–ª—É, —è–∫–∏–π —â–µ –Ω–µ –∑–Ω—è–ª–∏.",
            "üõ†Ô∏è –¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ ‚Äî –∫–æ—Å—Ç–∏–ª—å, –∞–ª–µ –±–µ–∑ —Ç–µ–±–µ –Ω—ñ—á–æ–≥–æ –Ω–µ –ø—Ä–∞—Ü—é—î.",
            "üßü‚Äç‚ôÇÔ∏è –¢–∏ –∑–æ–º–±—ñ, –∞–ª–µ –∑–∞–º—ñ—Å—Ç—å –º—ñ–∑–∫—ñ–≤ –ø–æ–ª—é—î—à —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∏.",
            "ü§ñ –¢–∏ —Ä–æ–±–æ—Ç, —è–∫–∏–π –Ω–∞–≤—á–∏–≤—Å—è –ª—ñ–Ω—É–≤–∞—Ç–∏—Å—è.",
            "üê± –¢–∏ –∫—ñ—Ç, —è–∫–∏–π –ø—Ä–∏—Ç–≤–æ—Ä—è—î—Ç—å—Å—è –ª—é–¥–∏–Ω–æ—é.",
            "ü¶Ñ –¢–∏ –º–∞–≥—ñ—á–Ω–∏–π —î–¥–∏–Ω–æ—Ä—ñ–≥, –∞–ª–µ —Ä—ñ–≥ –∑–ª–∞–º–∞–≤—Å—è.",
            "üëé –¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ ‚Äî —Ä–æ–∑—É–º–Ω–∏–π –º–µ–º, –∞–ª–µ –Ω—ñ—Ö—Ç–æ –Ω–µ —Ä–æ–∑—É–º—ñ—î.",
            "üé® –¢–∏ —Ö—É–¥–æ–∂–Ω–∏–∫, —è–∫–∏–π –º–∞–ª—é—î –µ–º–æ—Ü—ñ—ó –Ω–∞ –ø–æ–≤—ñ—Ç—Ä—ñ.",
            "üïµÔ∏è‚Äç‚ôÇÔ∏è –¢–∏ –¥–µ—Ç–µ–∫—Ç–∏–≤, —è–∫–∏–π —Ä–æ–∑—Å–ª—ñ–¥—É—î –∑–Ω–∏–∫–Ω–µ–Ω–Ω—è –≤–ª–∞—Å–Ω–æ—ó –º–æ—Ç–∏–≤–∞—Ü—ñ—ó.",
            "üì∫ –¢–∏ —Å—Ç–∞—Ä–∏–π —Ç–µ–ª–µ–≤—ñ–∑–æ—Ä ‚Äî –≤—Å—ñ –Ω–æ—Å—Ç–∞–ª—å–≥—É—é—Ç—å, –∞–ª–µ –Ω—ñ—Ö—Ç–æ –Ω–µ –≤–º–∏–∫–∞—î.",
            "üï∞Ô∏è –¢–∏ —Ç–∞–π–º –º–∞—à–∏–Ω–∞, –∞–ª–µ –∑–∞—Å—Ç—Ä—è–≥ —É –ø–æ–Ω–µ–¥—ñ–ª–∫—É.",
            "üå≠ –¢–∏ —Ö–æ—Ç-–¥–æ–≥ —É –≤–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—å–∫–æ–º—É –∫–∞—Ñ–µ ‚Äî —Å–∏–¥–∏—à —ñ –Ω–µ —Ä–æ–∑—É–º—ñ—î—à, —â–æ —Ç—É—Ç —Ä–æ–±–∏—à.",
            "üöΩ –¢–∏ –º—É–¥—Ä–µ—Ü—å, —è–∫–∏–π –º–µ–¥–∏—Ç—É—î —É —Ç—É–∞–ª–µ—Ç—ñ.",
            "üéÜ –¢–∏ —Ñ–µ—î—Ä–≤–µ—Ä–∫, —è–∫–∏–π –∑–≥–æ—Ä–∞—î –Ω–∞ —Ä–æ–±–æ—Ç—ñ.",
            "üßõ‚Äç‚ôÄÔ∏è –¢–∏ –≤–∞–º–ø—ñ—Ä, –∞–ª–µ –∑–∞–º—ñ—Å—Ç—å –∫—Ä–æ–≤—ñ –ø'—î—à –∫–∞–≤—É.",
            "üêå –¢–∏ —á–µ—Ä–≤'—è–∫, —è–∫–∏–π –≤–∏—Ä—ñ—à–∏–≤ —Å—Ç–∞—Ç–∏ –º–µ—Ç–µ–ª–∏–∫–æ–º, –∞–ª–µ –∑–∞—Å—Ç—Ä—è–≥ –ø–æ –¥–æ—Ä–æ–∑—ñ.",
            "üåä –¢–∏ —Ü—É–Ω–∞–º—ñ, –∞–ª–µ —É —Å–∫–ª—è–Ω—Ü—ñ –≤–æ–¥–∏.",
            "üß≠ –¢–∏ –∫–æ–º–ø–∞—Å, —è–∫–∏–π –∑–∞–≤–∂–¥–∏ –≤–∫–∞–∑—É—î –Ω–∞ –ø—ñ–≤–¥–µ–Ω—å.",
            "üèùÔ∏è –¢–∏ —Ç—É—Ä–∏—Å—Ç, —è–∫–∏–π –∑–∞–≥—É–±–∏–≤—Å—è –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ.",
            "üêà‚Äç‚¨õ –¢–∏ —á–æ—Ä–Ω–∏–π –∫—ñ—Ç, —è–∫–∏–π –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —â–∞—Å—Ç—è —á–µ—Ä–µ–∑ –º–µ–º–∏.",
            "üé™ –¢–∏ —Ü–∏—Ä–∫, –∞–ª–µ –∫–ª–æ—É–Ω–∏ –≤ –¥–µ–∫—Ä–µ—Ç—ñ.",
            "üöÅ –¢–∏ –≥–µ–ª—ñ–∫–æ–ø—Ç–µ—Ä, —è–∫–∏–π –±–æ—ó—Ç—å—Å—è –≤–∏—Å–æ—Ç–∏.",
            "üì± –¢–∏ –¥–æ–¥–∞—Ç–æ–∫, —è–∫–∏–π –Ω—ñ—Ö—Ç–æ –Ω–µ —Å–∫–∞—á—É—î.",
            "ü•™ –¢–∏ —Å–µ–Ω–¥–≤—ñ—á, —è–∫–∏–π –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è –¥—ñ—î—Ç—É–≤–∞—Ç–∏.",
            "üîã –¢–∏ –ø–æ–≤–µ—Ä–±–∞–Ω–∫, —è–∫–∏–π —Å–∞–º –ø–æ—Ç—Ä–µ–±—É—î –∑–∞—Ä—è–¥–∫–∏.",
            "üéØ –¢–∏ –º—ñ—à–µ–Ω—å, –∞–ª–µ –≤—Å—ñ —Å—Ç—Ä—ñ–ª—è—é—Ç—å –ø–æ–≤–∑.",
            "üß∏ –¢–∏ –ø–ª—é—à–µ–≤–∏–π –≤–µ–¥–º–µ–¥–∏–∫ —É —Å–≤—ñ—Ç—ñ –¥–æ—Ä–æ—Å–ª–∏—Ö –ø—Ä–æ–±–ª–µ–º."
        ]
        
        # English roles for "Who are you today" game
        self.roles_en = [
            "ü•∑ You're a ninja today, but forgot your mask.",
            "ü¶∏‚Äç‚ôÇÔ∏è You're a superhero... just without superpowers.",
            "üõå You're like a pillow ‚Äî everyone loves you, but only when they want to sleep.",
            "‚ö° You're like a dead phone battery today ‚Äî everyone's nervous but does nothing.",
            "üçï You're like the last slice of pizza ‚Äî everyone wants it but nobody takes it.",
            "üé≤ You're the main player in the game called 'life'.",
            "üíæ You're like a 2GB flash drive ‚Äî still exist but nobody needs you.",
            "üêí You're a monkey today, watching people and wondering who's the real evolutionist.",
            "üé≠ You're the main character in a TV show that hasn't been filmed yet.",
            "üõ†Ô∏è You're a crutch today, but nothing works without you.",
            "üßü‚Äç‚ôÇÔ∏è You're a zombie, but instead of brains you hunt smartphones.",
            "ü§ñ You're a robot who learned how to procrastinate.",
            "üê± You're a cat pretending to be human.",
            "ü¶Ñ You're a magical unicorn, but the horn is broken.",
            "üëé You're a smart meme today, but nobody gets it.",
            "üé® You're an artist painting emotions in the air.",
            "üïµÔ∏è‚Äç‚ôÇÔ∏è You're a detective investigating the disappearance of your own motivation.",
            "üì∫ You're an old TV ‚Äî everyone's nostalgic but nobody turns you on.",
            "üï∞Ô∏è You're a time machine stuck on Monday.",
            "üå≠ You're a hot dog in a vegetarian cafe ‚Äî sitting and not understanding what you're doing here.",
            "üöΩ You're a wise man meditating in the toilet.",
            "üéÜ You're a firework that burns out at work.",
            "üßõ‚Äç‚ôÄÔ∏è You're a vampire, but instead of blood you drink coffee.",
            "üêå You're a worm who decided to become a butterfly but got stuck halfway.",
            "üåä You're a tsunami in a glass of water.",
            "üß≠ You're a compass that always points south.",
            "üèùÔ∏è You're a tourist lost on the internet.",
            "üêà‚Äç‚¨õ You're a black cat bringing luck through memes.",
            "üé™ You're a circus, but clowns are on maternity leave.",
            "üöÅ You're a helicopter afraid of heights.",
            "üì± You're an app that nobody downloads.",
            "ü•™ You're a sandwich trying to diet.",
            "üîã You're a power bank that needs charging itself.",
            "üéØ You're a target, but everyone misses.",
            "üß∏ You're a teddy bear in a world of adult problems."
        ]

        # Ukrainian jokes collection (100 jokes without Russian words)
        self.jokes_uk: List[str] = [
            "–¢–∏ —è–∫ Wi-Fi ‚Äî –≤—Å—ñ –ø—ñ–¥–∫–ª—é—á–∞—é—Ç—å—Å—è, –∞–ª–µ –ø–∞—Ä–æ–ª—å –Ω–µ –∑–Ω–∞—é—Ç—å.",
            "–ñ–∏—Ç—Ç—è ‚Äî —Ü–µ –Ω–µ GTA, –∞–ª–µ —è –≤—Å–µ –æ–¥–Ω–æ —á–µ–∫–∞—é, –∫–æ–ª–∏ –¥–∞–¥—É—Ç—å —á—ñ—Ç–∏.",
            "–ö—Ä–∞—â–µ –±—É—Ç–∏ –≤ –æ—Ñ–ª–∞–π–Ω—ñ, –Ω—ñ–∂ —É –±–æ—Ä–≥–∞—Ö.",
            "–¢–∏ –Ω–µ –¥–∏–≤–Ω–∏–π, —Ç–∏ ‚Äî –æ–±–º–µ–∂–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è –∫–æ–ª–µ–∫—Ü—ñ–æ–Ω–µ—Ä—ñ–≤!",
            "–ú–æ—è –∑–∞—Ä–ø–ª–∞—Ç–∞ —è–∫ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –≤ —Å–µ–ª—ñ ‚Äî —ñ—Å–Ω—É—î —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–æ.",
            "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫ ‚Äî —Ü–µ –Ω–µ –¥–µ–Ω—å —Ç–∏–∂–Ω—è, —Ü–µ —Å—Ç–∞–Ω –¥—É—à—ñ.",
            "–¢–∏ —è–∫ –±–∞—Ç–∞—Ä–µ–π–∫–∞ –Ω–∞ 1% ‚Äî —â–µ –ø—Ä–∞—Ü—é—î—à, –∞–ª–µ –≤—Å—ñ –Ω–µ—Ä–≤—É—é—Ç—å.",
            "–ñ–∏—Ç—Ç—è –¥–∞–ª–æ –º–µ–Ω—ñ –ª–∏–º–æ–Ω–∏, –∞–ª–µ —è –∑–∞–±—É–≤ –∫—É–ø–∏—Ç–∏ —Ü—É–∫–æ—Ä.",
            "–¢–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —Å—è—î—à —è–∫ –µ–∫—Ä–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ —Ç–µ–º—Ä—è–≤—ñ ‚Äî —è—Å–∫—Ä–∞–≤–æ —ñ –¥—Ä–∞—Ç—É—î.",
            "–¢–∏ —è–∫ Google ‚Äî —É —Ç–µ–±–µ —î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≤—Å–µ, –∞–ª–µ –Ω—ñ—Ö—Ç–æ –Ω–µ —á–∏—Ç–∞—î –¥–∞–ª—ñ –ø–µ—Ä—à–æ–≥–æ —Ä—è–¥–∫–∞.",
            "–¢–≤–æ—î –∂–∏—Ç—Ç—è ‚Äî —Ü–µ —è–∫ Windows Update: –¥–æ–≤–≥–æ, –¥–∏–≤–Ω–æ —ñ –∑–∞–≤–∂–¥–∏ –Ω–µ –≤—á–∞—Å–Ω–æ.",
            "–ö–∞–∂—É—Ç—å, —â–æ —Å–æ–Ω ‚Äî —Ü–µ –¥–ª—è —Å–ª–∞–±–∞–∫—ñ–≤. –ù—É, —Ç–æ–¥—ñ —è –Ω–∞–π—Å–ª–∞–±—à–∏–π —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π —É —Å–≤—ñ—Ç—ñ.",
            "–¢–∏ —è–∫ –∑–∞—Ä—è–¥–∫–∞ –≤—ñ–¥ iPhone ‚Äî –≤—Å—ñ–º –ø–æ—Ç—Ä—ñ–±–µ–Ω, –∞–ª–µ –Ω—ñ—Ö—Ç–æ –Ω–µ —Ö–æ—á–µ –∫—É–ø—É–≤–∞—Ç–∏.",
            "–ù—ñ–∫–æ–ª–∏ –Ω–µ –∑–¥–∞–≤–∞–π—Å—è‚Ä¶ —Ö—ñ–±–∞ —â–æ –ø–∞—Ä–æ–ª—å –∑–∞–Ω–∞–¥—Ç–æ —Å–∫–ª–∞–¥–Ω–∏–π.",
            "–¢–∏ —è–∫ –≤–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å ‚Äî –≤—Å—ñ —Ç–µ–±–µ —á–µ–∫–∞—é—Ç—å, –∞–ª–µ —Ç–∏ —à–≤–∏–¥–∫–æ –∑–∞–∫—ñ–Ω—á—É—î—à—Å—è.",
            "–ú–æ—î —Ç–µ—Ä–ø—ñ–Ω–Ω—è —è–∫ –±–∞—Ç–∞—Ä–µ–π–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É ‚Äî —Å—ñ–¥–∞—î –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–æ.",
            "–¢–∏ —è–∫ —Ä–µ–∫–ª–∞–º–∞ –Ω–∞ YouTube ‚Äî —Å–ø–æ—á–∞—Ç–∫—É –¥—Ä–∞—Ç—É—î—à, –ø–æ—Ç—ñ–º –∑–≤–∏–∫–∞—î—à.",
            "–ñ–∏—Ç—Ç—è —è–∫ Instagram ‚Äî –≤—Å—ñ –ø–æ–∫–∞–∑—É—é—Ç—å —Ç—ñ–ª—å–∫–∏ –Ω–∞–π–∫—Ä–∞—â–µ.",
            "–¢–∏ —è–∫ —á–∞—à–∫–∞ –∫–∞–≤–∏ –≤—Ä–∞–Ω—Ü—ñ ‚Äî –±–µ–∑ —Ç–µ–±–µ –¥–µ–Ω—å –Ω–µ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è.",
            "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —è–∫ –ø–æ–≥–æ–¥–∞ –≤ –£–∫—Ä–∞—ó–Ω—ñ ‚Äî –º—ñ–Ω–ª–∏–≤–∏–π —ñ –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω–∏–π.",
            "–¢–∏ —è–∫ –ø–∞—Å–ø–æ—Ä—Ç ‚Äî –≤–∞–∂–ª–∏–≤–∏–π, –∞–ª–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à—Å—è —Ä—ñ–¥–∫–æ.",
            "–ú–æ—è –º–æ—Ç–∏–≤–∞—Ü—ñ—è —è–∫ —Å–∏–≥–Ω–∞–ª —É –ª—ñ—Ñ—Ç—ñ ‚Äî —î, –∞–ª–µ —Å–ª–∞–±–∫–∏–π.",
            "–¢–∏ —è–∫ —Å–µ–ª—Ñ—ñ ‚Äî –≤–∏–≥–ª—è–¥–∞—î—à –∫—Ä–∞—â–µ –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏.",
            "–ñ–∏—Ç—Ç—è —è–∫ —Ç–µ—Å—Ç –Ω–∞ –≤–æ–¥—ñ–π—Å—å–∫—ñ –ø—Ä–∞–≤–∞ ‚Äî –∑–¥–∞—î—à –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤ –¥–æ –ø–µ—Ä–µ–º–æ–≥–∏.",
            "–¢–∏ —è–∫ –ø—ñ—Ü–∞ ‚Äî –Ω–∞–≤—ñ—Ç—å –∫–æ–ª–∏ –ø–æ–≥–∞–Ω–∞, –≤—Å–µ –æ–¥–Ω–æ —Å–º–∞—á–Ω–∞.",
            "–ú—ñ–π —Ä–æ–∑–∫–ª–∞–¥ —è–∫ –æ–±—ñ—Ü—è–Ω–∫–∏ –ø–æ–ª—ñ—Ç–∏–∫—ñ–≤ ‚Äî —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–æ —ñ—Å–Ω—É—î.",
            "–¢–∏ —è–∫ WiFi —É –∫–∞—Ñ–µ ‚Äî –≤—Å—ñ —Ö–æ—á—É—Ç—å –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è.",
            "–ñ–∏—Ç—Ç—è —è–∫ –≥—Ä–∞ ‚Äî —á–∏–º –¥–∞–ª—ñ, —Ç–∏–º —Å–∫–ª–∞–¥–Ω—ñ—à—ñ —Ä—ñ–≤–Ω—ñ.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤–∞ –∫–∞–≤–∞ ‚Äî –≥—ñ—Ä–∫–∏–π, –∞–ª–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π.",
            "–ú—ñ–π –±—é–¥–∂–µ—Ç —è–∫ –º–µ—Ç–µ–ª–∏–∫ ‚Äî –∫—Ä–∞—Å–∏–≤–∏–π, –∞–ª–µ —à–≤–∏–¥–∫–æ –∑–Ω–∏–∫–∞—î.",
            "–¢–∏ —è–∫ –∑–∞—Ä—è–¥–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É ‚Äî –∑–∞–≤–∂–¥–∏ –∑–∞–≥—É–±–ª—è—î—à—Å—è, –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω.",
            "–ñ–∏—Ç—Ç—è —è–∫ –∞–≤—Ç–æ–±—É—Å ‚Äî —è–∫—â–æ —Å–ø—ñ–∑–Ω–∏–≤—Å—è, —á–µ–∫–∞–π –Ω–∞—Å—Ç—É–ø–Ω–∏–π.",
            "–¢–∏ —è–∫ –≤—ñ–¥–ø—É—Å—Ç–∫–∞ ‚Äî –¥–æ–≤–≥–æ–æ—á—ñ–∫—É–≤–∞–Ω–∏–π —ñ —à–≤–∏–¥–∫–æ–ø–ª–∏–Ω–Ω–∏–π.",
            "–ú—ñ–π —Å–æ–Ω —è–∫ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç ‚Äî –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω –Ω–∞–π–±—ñ–ª—å—à–µ, –Ω–µ –ø—Ä–∞—Ü—é—î.",
            "–¢–∏ —è–∫ —Å—É–±–æ—Ç–∞ ‚Äî –Ω–∞–π–∫—Ä–∞—â–∏–π –¥–µ–Ω—å —Ç–∏–∂–Ω—è.",
            "–ñ–∏—Ç—Ç—è —è–∫ —Å–º–∞—Ä—Ç—Ñ–æ–Ω ‚Äî —á–∏–º –Ω–æ–≤—ñ—à–µ, —Ç–∏–º —à–≤–∏–¥—à–µ —Ä–æ–∑—Ä—è–¥–∂–∞—î—Ç—å—Å—è.",
            "–¢–∏ —è–∫ –ª–∞–π–∫ —É —Å–æ—Ü–º–µ—Ä–µ–∂—ñ ‚Äî –ø—Ä–∏—î–º–Ω–∏–π —ñ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π.",
            "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —è–∫ –∫—É—Ä—Å –≤–∞–ª—é—Ç ‚Äî —â–æ–¥–Ω—è –∑–º—ñ–Ω—é—î—Ç—å—Å—è.",
            "–¢–∏ —è–∫ –¥–æ–º–∞—à–Ω—è —ó–∂–∞ ‚Äî –ø—Ä–æ—Å—Ç–∞, –∞–ª–µ –Ω–∞–π—Å–º–∞—á–Ω—ñ—à–∞.",
            "–ñ–∏—Ç—Ç—è —è–∫ –∫–≤–µ—Å—Ç ‚Äî –±–∞–≥–∞—Ç–æ –∑–∞–≤–¥–∞–Ω—å, –∞–ª–µ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –Ω–µ–≤—ñ–¥–æ–º–∞.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤–∞ –ø—Ä–æ–±—ñ–∂–∫–∞ ‚Äî –∫–æ—Ä–∏—Å–Ω–∏–π, –∞–ª–µ –≤–∞–∂–∫–∏–π.",
            "–ú—ñ–π —Ä–æ–∑—É–º —è–∫ Google Chrome ‚Äî –≤—ñ–¥–∫—Ä–∏—Ç–æ 100 –≤–∫–ª–∞–¥–æ–∫ –æ–¥–Ω–æ—á–∞—Å–Ω–æ.",
            "–¢–∏ —è–∫ –≤–µ—á—ñ—Ä–Ω—è –ø—Ä–æ–≥—É–ª—è–Ω–∫–∞ ‚Äî —Å–ø–æ–∫—ñ–π–Ω–∏–π —ñ –ø—Ä–∏—î–º–Ω–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –Ω–∞–≤—ñ–≥–∞—Ç–æ—Ä ‚Äî —ñ–Ω–æ–¥—ñ –≤–µ–¥–µ –Ω–µ —Ç—É–¥–∏, –∫—É–¥–∏ —Ö–æ—Ç—ñ–≤.",
            "–¢–∏ —è–∫ —É–ª—é–±–ª–µ–Ω–∞ –ø—ñ—Å–Ω—è ‚Äî –º–æ–∂–Ω–∞ —Å–ª—É—Ö–∞—Ç–∏ –±–µ–∑–∫—ñ–Ω–µ—á–Ω–æ.",
            "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —è–∫ –ø–æ–≥–æ–¥–∞ ‚Äî –∑–º—ñ–Ω—é—î—Ç—å—Å—è –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É.",
            "–¢–∏ —è–∫ –≤–∏—Ö—ñ–¥–Ω—ñ ‚Äî –∑–∞–∫—ñ–Ω—á—É—î—à—Å—è –∑–∞–Ω–∞–¥—Ç–æ —à–≤–∏–¥–∫–æ.",
            "–ñ–∏—Ç—Ç—è —è–∫ –≤—ñ–¥–µ–æ–≥—Ä–∞ ‚Äî –º–∞—î—à –∫—ñ–ª—å–∫–∞ –∂–∏—Ç—Ç—ñ–≤, –∞–ª–µ –Ω–µ –∑–Ω–∞—î—à —Å–∫—ñ–ª—å–∫–∏.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤–∞ –∑–∞—Ä—è–¥–∫–∞ ‚Äî –ø–æ—Ç—Ä—ñ–±–µ–Ω, –∞–ª–µ —á–∞—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞—î—Ç—å—Å—è.",
            "–ú—ñ–π —Å–ø–æ–∫—ñ–π —è–∫ —Å–∏–≥–Ω–∞–ª –º–æ–±—ñ–ª—å–Ω–æ–≥–æ ‚Äî –∑–Ω–∏–∫–∞—î –≤ –Ω–∞–π–ø–æ—Ç—Ä—ñ–±–Ω—ñ—à–∏–π –º–æ–º–µ–Ω—Ç.",
            "–¢–∏ —è–∫ —É–ª—é–±–ª–µ–Ω–∏–π —Å–µ—Ä—ñ–∞–ª ‚Äî —á–µ–∫–∞—î—à –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è.",
            "–ñ–∏—Ç—Ç—è —è–∫ —Ñ—ñ–ª—å–º ‚Äî —ñ–Ω–æ–¥—ñ –∫–æ–º–µ–¥—ñ—è, —ñ–Ω–æ–¥—ñ –¥—Ä–∞–º–∞.",
            "–¢–∏ —è–∫ –≤–µ—Å–Ω—è–Ω–µ —Å–æ–Ω—Ü–µ ‚Äî –¥–æ–≤–≥–æ–æ—á—ñ–∫—É–≤–∞–Ω–∏–π —ñ —Ç–µ–ø–ª–∏–π.",
            "–ú—ñ–π —á–∞—Å —è–∫ –º–µ—Ç—Ä–æ –≤ –≥–æ–¥–∏–Ω—É –ø—ñ–∫ ‚Äî –∑–∞–≤–∂–¥–∏ –≤ —Ä—É—Å—ñ, –∞–ª–µ –ø–æ–≤—ñ–ª—å–Ω–æ.",
            "–¢–∏ —è–∫ –¥–æ–º–∞—à–Ω—ñ–π –∑–∞—Ç–∏—à–æ–∫ ‚Äî –ø—Ä–æ—Å—Ç–∏–π, –∞–ª–µ –¥–æ—Ä–æ–≥–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ —à–∫–æ–ª–∞ ‚Äî —É—Ä–æ–∫ –∑–∞ —É—Ä–æ–∫–æ–º, —ñ—Å–ø–∏—Ç –∑–∞ —ñ—Å–ø–∏—Ç–æ–º.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤–∞ —Å–≤—ñ–∂—ñ—Å—Ç—å ‚Äî –±–∞–¥—å–æ—Ä–∏–π —ñ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω–∏–π.",
            "–ú—ñ–π –ª—ñ–Ω–∏–≤–µ—Ü—å —è–∫ –ø–∞–Ω–¥–∞ ‚Äî –º–∏–ª–∞, –∞–ª–µ –ø–æ–≤—ñ–ª—å–Ω–∞.",
            "–¢–∏ —è–∫ –∫–Ω–∏–≥–∞ ‚Äî —á–∏–º –≥–ª–∏–±—à–µ, —Ç–∏–º —Ü—ñ–∫–∞–≤—ñ—à–µ.",
            "–ñ–∏—Ç—Ç—è —è–∫ —Ç–∞–Ω—Ü—ñ ‚Äî –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–¥—á—É–≤–∞—Ç–∏ —Ä–∏—Ç–º.",
            "–¢–∏ —è–∫ —Ç–µ–ø–ª–∏–π –ø–ª–µ–¥ ‚Äî –æ–±—ñ–π–º–∞—î—à —ñ –∑–∞—Å–ø–æ–∫–æ—é—î—à.",
            "–ú—ñ–π –≥—É–º–æ—Ä —è–∫ –±–æ—Ä—â ‚Äî –Ω–µ –≤—Å—ñ–º –¥–æ —Å–º–∞–∫—É.",
            "–¢–∏ —è–∫ –∑–æ—Ä—è–Ω–µ –Ω–µ–±–æ ‚Äî –ø—Ä–µ–∫—Ä–∞—Å–Ω–∏–π —ñ –∑–∞–≥–∞–¥–∫–æ–≤–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å ‚Äî —ñ–Ω–æ–¥—ñ –≥–ª–æ—Ö–Ω–µ, –∞–ª–µ –∑–∞–≤–∂–¥–∏ –º–æ–∂–Ω–∞ –∑–∞–≤–µ—Å—Ç–∏.",
            "–¢–∏ —è–∫ –ª—ñ—Ç–Ω—ñ–π –¥–æ—â ‚Äî –æ—Å–≤—ñ–∂–∞—î—à —ñ —Ä–∞–¥—É—î—à.",
            "–ú—ñ–π —Ä–µ–∂–∏–º –¥–Ω—è —è–∫ —Ä–æ–∑–∫–ª–∞–¥ –ø–æ—ó–∑–¥—ñ–≤ ‚Äî —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–æ —ñ—Å–Ω—É—î.",
            "–¢–∏ —è–∫ –¥–æ–º–∞—à–Ω—ñ–π —É–ª—é–±–ª–µ–Ω–µ—Ü—å ‚Äî –º–∏–ª–∏–π —ñ –≤—ñ–¥–¥–∞–Ω–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –ø–æ–∫—É–ø–∫–∏ ‚Äî –∑–∞–≤–∂–¥–∏ –≤–∏—Ç—Ä–∞—á–∞—î—à –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –ø–ª–∞–Ω—É–≤–∞–≤.",
            "–¢–∏ —è–∫ —Å–Ω—ñ–¥–∞–Ω–æ–∫ ‚Äî –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–∏–π —ñ –Ω–∞–π–∫—Ä–∞—â–∏–π.",
            "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —è–∫ –º–∞—è—Ç–Ω–∏–∫ ‚Äî —Ç—É–¥–∏-—Å—é–¥–∏ –ø–æ—Å—Ç—ñ–π–Ω–æ.",
            "–¢–∏ —è–∫ –ø–µ—Ä—à–∞ –ª—é–±–æ–≤ ‚Äî –Ω–µ–∑–∞–±—É—Ç–Ω—ñ–π —ñ –æ—Å–æ–±–ª–∏–≤–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –ø–∞–∑–ª ‚Äî –∑–±–∏—Ä–∞—î—à –ø–æ —á–∞—Å—Ç–∏–Ω–∫–∞—Ö.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤–∞ —Ä–æ—Å–∞ ‚Äî —Å–≤—ñ–∂–∏–π —ñ —á–∏—Å—Ç–∏–π.",
            "–ú—ñ–π —Å–ø–æ–∫—ñ–π —è–∫ –≤—ñ–¥–ø—É—Å—Ç–∫–∞ ‚Äî —Ä—ñ–¥–∫–∏–π, –∞–ª–µ —Ü—ñ–Ω–Ω–∏–π.",
            "–¢–∏ —è–∫ —É–ª—é–±–ª–µ–Ω–∞ —Å—Ç—Ä–∞–≤–∞ ‚Äî –∑–∞–≤–∂–¥–∏ –ø—ñ–¥–Ω—ñ–º–∞—î—à –Ω–∞—Å—Ç—Ä—ñ–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –º–∞—Ä–∞—Ñ–æ–Ω ‚Äî –≤–∞–∂–ª–∏–≤–æ –Ω–µ —à–≤–∏–¥–∫—ñ—Å—Ç—å, –∞ –≤–∏—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å.",
            "–¢–∏ —è–∫ –∑–∏–º–æ–≤–∏–π –≤–µ—á—ñ—Ä ‚Äî –∑–∞—Ç–∏—à–Ω–∏–π —ñ —Ç–µ–ø–ª–∏–π.",
            "–ú—ñ–π –æ–ø—Ç–∏–º—ñ–∑–º —è–∫ —Å–º–∞—Ä—Ç—Ñ–æ–Ω ‚Äî —ñ–Ω–æ–¥—ñ –ø–æ—Ç—Ä–µ–±—É—î –ø—ñ–¥–∑–∞—Ä—è–¥–∫–∏.",
            "–¢–∏ —è–∫ –≤–µ—Å–µ–ª–∫–∞ –ø—ñ—Å–ª—è –¥–æ—â—É ‚Äî –∫—Ä–∞—Å–∏–≤–∏–π —ñ –æ–±–Ω–∞–¥—ñ–π–ª–∏–≤–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –≤–µ–ª–æ—Å–∏–ø–µ–¥ ‚Äî —Ç—Ä–µ–±–∞ –∫—Ä—É—Ç–∏—Ç–∏ –ø–µ–¥–∞–ª—ñ, —â–æ–± —ó—Ö–∞—Ç–∏.",
            "–¢–∏ —è–∫ —É–ª—é–±–ª–µ–Ω–µ—Ü—å —É—á–∏—Ç–µ–ª—è ‚Äî –æ—Å–æ–±–ª–∏–≤–∏–π —ñ –ø–æ–º—ñ—Ç–Ω–∏–π.",
            "–ú—ñ–π —Å–æ–Ω —è–∫ –∫—ñ—Ç ‚Äî –∫–æ–ª–∏ —Ö–æ—á—É, —Ç–æ–¥—ñ –π –ø—Ä–∏—Ö–æ–¥–∏—Ç—å.",
            "–¢–∏ —è–∫ –ª—ñ—Ç–æ ‚Äî —è—Å–∫—Ä–∞–≤–∏–π, —Ç–µ–ø–ª–∏–π —ñ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ —à–∞—Ö–∏ ‚Äî —Ç—Ä–µ–±–∞ –¥—É–º–∞—Ç–∏ –Ω–∞ –∫—ñ–ª—å–∫–∞ —Ö–æ–¥—ñ–≤ –≤–ø–µ—Ä–µ–¥.",
            "–¢–∏ —è–∫ –º–æ—Ä—Å—å–∫–∏–π –±—Ä–∏–∑ ‚Äî —Å–≤—ñ–∂–∏–π —ñ –∑–∞—Å–ø–æ–∫—ñ–π–ª–∏–≤–∏–π.",
            "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —è–∫ –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–∞—Ö ‚Äî –º–æ–∂–µ –∑–º—ñ–Ω–∏—Ç–∏—Å—è –º–∏—Ç—Ç—î–≤–æ.",
            "–¢–∏ —è–∫ –¥–æ–º–∞—à–Ω—è –≤–∏–ø—ñ—á–∫–∞ ‚Äî –∞—Ä–æ–º–∞—Ç–Ω–∏–π —ñ –∑–∞—Ç–∏—à–Ω–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ —Ç–µ–∞—Ç—Ä ‚Äî –≤—Å—ñ –≥—Ä–∞—é—Ç—å —Å–≤–æ—ó —Ä–æ–ª—ñ.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤—ñ –ø—Ç–∞—Ö–∏ ‚Äî –∞–∫—Ç–∏–≤–Ω–∏–π —ñ –±–∞–¥—å–æ—Ä–∏–π.",
            "–ú—ñ–π –ª—ñ–Ω–∏–≤–µ—Ü—å —è–∫ —á–µ—Ä–µ–ø–∞—Ö–∞ ‚Äî –ø–æ–≤—ñ–ª—å–Ω–æ, –∞–ª–µ –≤–ø–µ–≤–Ω–µ–Ω–æ.",
            "–¢–∏ —è–∫ –∑–∏–º–æ–≤—ñ —Å–≤—è—Ç–∞ ‚Äî –¥–æ–≤–≥–æ–æ—á—ñ–∫—É–≤–∞–Ω–∏–π —ñ —Ä–∞–¥—ñ—Å–Ω–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –∫–Ω–∏–≥–∞ ‚Äî –∫–æ–∂–µ–Ω –¥–µ–Ω—å –Ω–æ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞.",
            "–¢–∏ —è–∫ –æ—Å—ñ–Ω–Ω—î –ª–∏—Å—Ç—è ‚Äî –±–∞—Ä–≤–∏—Å—Ç–∏–π —ñ –Ω–µ–ø–æ–≤—Ç–æ—Ä–Ω–∏–π.",
            "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —è–∫ —Ö–º–∞—Ä–∏ ‚Äî —ñ–Ω–æ–¥—ñ —Ç–µ–º–Ω—ñ, —ñ–Ω–æ–¥—ñ —Å–≤—ñ—Ç–ª—ñ.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤–∞ –π–æ–≥–∞ ‚Äî –≥–Ω—É—á–∫–∏–π —ñ –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ —Å–∞–¥ ‚Äî —â–æ –ø–æ—Å—ñ—î—à, —Ç–µ –π –ø–æ–∂–Ω–µ—à.",
            "–¢–∏ —è–∫ —Ç–µ–ø–ª–∏–π —á–∞–π ‚Äî –∑–∞—Å–ø–æ–∫–æ—é—î—à —ñ –∑—ñ–≥—Ä—ñ–≤–∞—î—à.",
            "–ú—ñ–π —á–∞—Å —è–∫ —Ä—ñ—á–∫–∞ ‚Äî —Ç–µ—á–µ —ñ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è.",
            "–¢–∏ —è–∫ –≤–µ—Å–µ–ª–µ –∫—ñ–Ω–æ ‚Äî –ø—ñ–¥–Ω—ñ–º–∞—î—à –Ω–∞—Å—Ç—Ä—ñ–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –ø–æ–¥–æ—Ä–æ–∂ ‚Äî –≤–∞–∂–ª–∏–≤–∏–π –Ω–µ –ø—É–Ω–∫—Ç –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è, –∞ —à–ª—è—Ö.",
            "–¢–∏ —è–∫ –≤–µ—Å–Ω—è–Ω—ñ –∫–≤—ñ—Ç–∏ ‚Äî –Ω—ñ–∂–Ω–∏–π —ñ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∏–π.",
            "–ú—ñ–π –≥—É–º–æ—Ä —è–∫ –ø—Ä–∏–ø—Ä–∞–≤–∞ ‚Äî –¥–æ–¥–∞—î —Å–º–∞–∫ –¥–æ –∂–∏—Ç—Ç—è.",
            "–¢–∏ —è–∫ –∑–∏–º–æ–≤–∏–π –∑–∞—Ç–∏—à–æ–∫ ‚Äî —Ç–µ–ø–ª–∏–π —ñ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∏–π.",
            "–ñ–∏—Ç—Ç—è —è–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî –∑–±–∏—Ä–∞—î—à –∑ —Ç–æ–≥–æ, —â–æ —î.",
            "–¢–∏ —è–∫ —Ä–∞–Ω–∫–æ–≤–µ —Å–æ–Ω—Ü–µ ‚Äî –ø—Ä–æ–º–µ–Ω–∏—Å—Ç–∏–π —ñ –µ–Ω–µ—Ä–≥—ñ–π–Ω–∏–π.",
            "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —è–∫ –∫–∞–ª–µ–π–¥–æ—Å–∫–æ–ø ‚Äî –ø–æ—Å—Ç—ñ–π–Ω–æ –∑–º—ñ–Ω—é—é—Ç—å—Å—è —Ñ–∞—Ä–±–∏.",
            "–¢–∏ —è–∫ —É–ª—é–±–ª–µ–Ω–∞ –º–µ–ª–æ–¥—ñ—è ‚Äî –ø—Ä–∏—î–º–Ω–æ —Å–ª—É—Ö–∞—Ç–∏ –∑–Ω–æ–≤—É —ñ –∑–Ω–æ–≤—É.",
            "–ñ–∏—Ç—Ç—è —è–∫ —Å–∞–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ ‚Äî —Ç—Ä–µ–±–∞ –ø–æ–ª–∏–≤–∞—Ç–∏ –π –¥–æ–≥–ª—è–¥–∞—Ç–∏.",
            "–¢–∏ —è–∫ –º–æ—Ä—Å—å–∫–∞ —Ö–≤–∏–ª—è ‚Äî —Å–∏–ª—å–Ω–∏–π —ñ –≤—ñ–ª—å–Ω–∏–π.",
            "–ú—ñ–π —Å–æ–Ω —è–∫ –≥—ñ—Ä—Å—å–∫–∏–π –ø–æ—Ç—ñ–∫ ‚Äî —á–∏—Å—Ç–∏–π —ñ –æ—Å–≤—ñ–∂–∞—é—á–∏–π.",
            "–¢–∏ —è–∫ –¥–æ–º–∞—à–Ω—ñ–π –∑–∞—Ç–∏—à–æ–∫ ‚Äî –ø—Ä–æ—Å—Ç–∏–π, –∞–ª–µ –¥–æ—Ä–æ–≥–∏–π —Å–µ—Ä—Ü—é."
        ]
        
        # English jokes collection (50 jokes)
        self.jokes_en: List[str] = [
            "You're like Wi-Fi ‚Äî everyone connects, but nobody knows the password.",
            "Life isn't GTA, but I'm still waiting for the cheat codes.",
            "Better to be offline than in debt.",
            "You're not weird, you're a limited collector's edition!",
            "My salary is like village internet ‚Äî theoretically exists.",
            "Monday isn't a day of the week, it's a state of mind.",
            "You're like a 1% battery ‚Äî still working but everyone's nervous.",
            "Life gave me lemons, but I forgot to buy sugar.",
            "You shine today like a phone screen in the dark ‚Äî bright and annoying.",
            "You're like Google ‚Äî you have answers to everything, but nobody reads past the first line.",
            "Your life is like Windows Update: long, weird and always at the wrong time.",
            "They say sleep is for the weak. Well, I'm the weakest superhero in the world.",
            "You're like an iPhone charger ‚Äî everyone needs you but nobody wants to buy you.",
            "Never give up... unless the password is too complicated.",
            "You're like the weekend ‚Äî everyone's waiting for you but you end too quickly.",
            "My patience is like an old phone battery ‚Äî dies unexpectedly.",
            "You're like YouTube ads ‚Äî annoying at first, then you get used to it.",
            "Life is like Instagram ‚Äî everyone shows only the best parts.",
            "You're like morning coffee ‚Äî the day doesn't start without you.",
            "My mood is like Ukrainian weather ‚Äî changeable and unpredictable.",
            "You're like a passport ‚Äî important but rarely used.",
            "My motivation is like elevator signal ‚Äî exists but weak.",
            "You're like a selfie ‚Äî look better with filters.",
            "Life is like a driving test ‚Äî you take it several times until you win.",
            "You're like pizza ‚Äî even when bad, still tasty.",
            "My schedule is like politicians' promises ‚Äî theoretically exists.",
            "You're like cafe WiFi ‚Äî everyone wants to connect.",
            "Life is like a game ‚Äî the further you go, the harder the levels.",
            "You're like morning coffee ‚Äî bitter but necessary.",
            "My budget is like a butterfly ‚Äî beautiful but disappears quickly.",
            "You're like a phone charger ‚Äî always lost when needed most.",
            "Life is like a bus ‚Äî if you're late, wait for the next one.",
            "You're like vacation ‚Äî long-awaited and fleeting.",
            "My sleep is like internet ‚Äî when needed most, doesn't work.",
            "You're like Saturday ‚Äî the best day of the week.",
            "Life is like a smartphone ‚Äî the newer it is, the faster it drains.",
            "You're like a social media like ‚Äî pleasant and free.",
            "My mood is like currency rates ‚Äî changes daily.",
            "You're like home food ‚Äî simple but the tastiest.",
            "Life is like a quest ‚Äî many tasks but unknown reward.",
            "You're like morning jog ‚Äî useful but difficult.",
            "My mind is like Google Chrome ‚Äî 100 tabs open at once.",
            "You're like evening walk ‚Äî calm and pleasant.",
            "Life is like GPS ‚Äî sometimes leads you wrong way.",
            "You're like favorite song ‚Äî can listen endlessly.",
            "My mood is like weather ‚Äî changes every hour.",
            "You're like weekends ‚Äî end too quickly.",
            "Life is like a video game ‚Äî you have several lives but don't know how many.",
            "You're like morning exercise ‚Äî needed but often skipped."
        ]
        
        # Track used jokes to avoid repetition
        self.used_jokes_uk = {}
        self.used_jokes_en = {}
        
        # Setup message handlers
        self.setup_handlers()
    
    def get_user_language(self, user_id: int) -> str:
        """Get user's preferred language"""
        return self.user_languages.get(user_id, 'uk')
    
    def create_main_keyboard(self, lang: str):
        """Create main menu keyboard"""
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        
        if lang == 'uk':
            joke_btn = types.InlineKeyboardButton("üòÑ –ñ–∞—Ä—Ç", callback_data="joke")
            ball_btn = types.InlineKeyboardButton("üîÆ –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è", callback_data="8ball")
            role_btn = types.InlineKeyboardButton("üé≠ –•—Ç–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ", callback_data="whoami")
            lang_btn = types.InlineKeyboardButton("üåê English", callback_data="lang_en")
        else:
            joke_btn = types.InlineKeyboardButton("üòÑ Joke", callback_data="joke")
            ball_btn = types.InlineKeyboardButton("üîÆ Magic 8-Ball", callback_data="8ball")
            role_btn = types.InlineKeyboardButton("üé≠ Who are you today", callback_data="whoami")
            lang_btn = types.InlineKeyboardButton("üåê –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data="lang_uk")
            
        keyboard.add(joke_btn, ball_btn)
        keyboard.add(role_btn)
        keyboard.add(lang_btn)
        return keyboard
    
    def get_random_joke(self, user_id: int, lang: str) -> str:
        """Get random joke avoiding repetition"""
        if user_id not in self.used_jokes_uk:
            self.used_jokes_uk[user_id] = set()
        if user_id not in self.used_jokes_en:
            self.used_jokes_en[user_id] = set()
            
        jokes_list = self.jokes_uk if lang == 'uk' else self.jokes_en
        used_set = self.used_jokes_uk[user_id] if lang == 'uk' else self.used_jokes_en[user_id]
        
        # Reset if all jokes used
        if len(used_set) >= len(jokes_list):
            used_set.clear()
            
        # Get unused jokes
        available_jokes = [joke for joke in jokes_list if joke not in used_set]
        
        if not available_jokes:
            available_jokes = jokes_list
            used_set.clear()
            
        joke = random.choice(available_jokes)
        used_set.add(joke)
        return joke
    
    def get_random_role(self, user_id: int, lang: str) -> str:
        """Get random role avoiding immediate repetition"""
        roles_list = self.roles_uk if lang == 'uk' else self.roles_en
        role = random.choice(roles_list)
        
        # Avoid immediate repetition
        if user_id in self.last_roles and role == self.last_roles[user_id]:
            # Try to get different role
            for _ in range(5):  # Max 5 attempts
                new_role = random.choice(roles_list)
                if new_role != role:
                    role = new_role
                    break
        
        self.last_roles[user_id] = role
        return role
    
    def setup_handlers(self):
        """Setup bot message handlers"""
        
        @self.bot.message_handler(commands=['start'])
        def handle_start(message):
            self.start_command(message)
        
        @self.bot.message_handler(commands=['fun', 'joke'])
        def handle_fun(message):
            self.fun_command(message)
            
        @self.bot.message_handler(commands=['8ball', 'ball'])
        def handle_8ball(message):
            self.eight_ball_command(message)
            
        @self.bot.message_handler(commands=['whoami'])
        def handle_whoami(message):
            self.whoami_command(message)
        
        @self.bot.message_handler(commands=['help'])
        def handle_help(message):
            self.help_command(message)
            
        @self.bot.message_handler(commands=['lang', 'language'])
        def handle_language(message):
            self.language_command(message)
            
        @self.bot.callback_query_handler(func=lambda call: True)
        def handle_callback(call):
            self.handle_button_callback(call)
            
        @self.bot.message_handler(func=lambda message: True)
        def handle_all_messages(message):
            self.handle_unknown_message(message)
    
    def start_command(self, message):
        """Handle /start command"""
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            if lang == 'uk':
                welcome_message = (
                    "üá∫üá¶ –ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –±–æ—Ç –¥–ª—è –ø—Ä–∏–∫–æ–ª—ñ–≤! üëã\n\n"
                    "üé≠ –©–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å?"
                )
            else:
                welcome_message = (
                    "üá∫üá∏ Hello! I'm your Ukrainian joke bot! üëã\n\n"
                    "üé≠ What interests you?"
                )
                
            keyboard = self.create_main_keyboard(lang)
            self.bot.send_message(message.chat.id, welcome_message, reply_markup=keyboard)
            
            logger.info(f"Start command handled for user {user_id}")
        except Exception as e:
            logger.error(f"Error in start command: {e}")
            self.send_error_message(message)
    
    def fun_command(self, message):
        """Handle /fun and /joke commands"""
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            # Get random joke without repetition
            joke = self.get_random_joke(user_id, lang)
            
            # Create keyboard for more actions
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            if lang == 'uk':
                new_joke_btn = types.InlineKeyboardButton("üòÑ –©–µ –∂–∞—Ä—Ç", callback_data="joke")
                ball_btn = types.InlineKeyboardButton("üîÆ –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è", callback_data="8ball")
                role_btn = types.InlineKeyboardButton("üé≠ –•—Ç–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ", callback_data="whoami")
                menu_btn = types.InlineKeyboardButton("üì± –ú–µ–Ω—é", callback_data="menu")
            else:
                new_joke_btn = types.InlineKeyboardButton("üòÑ Another joke", callback_data="joke")
                ball_btn = types.InlineKeyboardButton("üîÆ Magic 8-Ball", callback_data="8ball")
                role_btn = types.InlineKeyboardButton("üé≠ Who are you today", callback_data="whoami")
                menu_btn = types.InlineKeyboardButton("üì± Menu", callback_data="menu")
                
            keyboard.add(new_joke_btn, ball_btn)
            keyboard.add(role_btn)
            keyboard.add(menu_btn)
            
            # Send joke with emoji
            formatted_joke = f"üòÑ {joke}"
            self.bot.send_message(message.chat.id, formatted_joke, reply_markup=keyboard)
            
            logger.info(f"Joke sent to user {user_id}")
        except Exception as e:
            logger.error(f"Error in fun command: {e}")
            self.send_error_message(message)
    
    def eight_ball_command(self, message):
        """Handle /8ball and /ball commands"""
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            # Get random magic 8-ball answer
            answers = self.magic_answers_uk if lang == 'uk' else self.magic_answers_en
            answer = random.choice(answers)
            
            # Create keyboard for more actions
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            if lang == 'uk':
                again_btn = types.InlineKeyboardButton("üîÆ –ó–Ω–æ–≤—É", callback_data="8ball")
                joke_btn = types.InlineKeyboardButton("üòÑ –ñ–∞—Ä—Ç", callback_data="joke")
                role_btn = types.InlineKeyboardButton("üé≠ –•—Ç–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ", callback_data="whoami")
                menu_btn = types.InlineKeyboardButton("üì± –ú–µ–Ω—é", callback_data="menu")
                response_text = f"üîÆ –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è –∫–∞–∂–µ:\n\n{answer}"
            else:
                again_btn = types.InlineKeyboardButton("üîÆ Again", callback_data="8ball")
                joke_btn = types.InlineKeyboardButton("üòÑ Joke", callback_data="joke")
                role_btn = types.InlineKeyboardButton("üé≠ Who are you today", callback_data="whoami")
                menu_btn = types.InlineKeyboardButton("üì± Menu", callback_data="menu")
                response_text = f"üîÆ Magic 8-Ball says:\n\n{answer}"
                
            keyboard.add(again_btn, joke_btn)
            keyboard.add(role_btn)
            keyboard.add(menu_btn)
            
            self.bot.send_message(message.chat.id, response_text, reply_markup=keyboard)
            
            logger.info(f"8-ball answer sent to user {user_id}")
        except Exception as e:
            logger.error(f"Error in 8ball command: {e}")
            self.send_error_message(message)
    
    def whoami_command(self, message):
        """Handle /whoami command - Who are you today game"""
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            # Get random role
            role = self.get_random_role(user_id, lang)
            
            # Create keyboard for more actions
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            if lang == 'uk':
                again_btn = types.InlineKeyboardButton("üé≠ –ó–Ω–æ–≤—É", callback_data="whoami")
                joke_btn = types.InlineKeyboardButton("üòÑ –ñ–∞—Ä—Ç", callback_data="joke")
                ball_btn = types.InlineKeyboardButton("üîÆ –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è", callback_data="8ball")
                menu_btn = types.InlineKeyboardButton("üì± –ú–µ–Ω—é", callback_data="menu")
            else:
                again_btn = types.InlineKeyboardButton("üé≠ Again", callback_data="whoami")
                joke_btn = types.InlineKeyboardButton("üòÑ Joke", callback_data="joke")
                ball_btn = types.InlineKeyboardButton("üîÆ Magic 8-Ball", callback_data="8ball")
                menu_btn = types.InlineKeyboardButton("üì± Menu", callback_data="menu")
                
            keyboard.add(again_btn, joke_btn)
            keyboard.add(ball_btn)
            keyboard.add(menu_btn)
            
            self.bot.send_message(message.chat.id, role, reply_markup=keyboard)
            
            logger.info(f"Role sent to user {user_id}")
        except Exception as e:
            logger.error(f"Error in whoami command: {e}")
            self.send_error_message(message)
    
    def help_command(self, message):
        """Handle /help command"""
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            if lang == 'uk':
                help_message = (
                    "ü§ñ –î–æ–ø–æ–º–æ–≥–∞ –ø–æ –±–æ—Ç—É:\n\n"
                    "üìã –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
                    "/start - –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º\n"
                    "/fun –∞–±–æ /joke - –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∂–∞—Ä—Ç\n"
                    "/8ball –∞–±–æ /ball - –º–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è (–∑–∞–¥–∞–π –ø–∏—Ç–∞–Ω–Ω—è)\n"
                    "/whoami - —Ö—Ç–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ (–≤–µ—Å–µ–ª–∞ –≥—Ä–∞)\n"
                    "/lang - –∑–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É\n"
                    "/help - –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n\n"
                    "üí° –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ! üòä"
                )
            else:
                help_message = (
                    "ü§ñ Bot help:\n\n"
                    "üìã Available commands:\n"
                    "/start - start working with bot\n"
                    "/fun or /joke - get random joke\n"
                    "/8ball or /ball - magic 8-ball (ask a question)\n"
                    "/whoami - who are you today (fun game)\n"
                    "/lang - change language\n"
                    "/help - show this message\n\n"
                    "üí° Use buttons for convenience! üòä"
                )
                
            keyboard = self.create_main_keyboard(lang)
            self.bot.send_message(message.chat.id, help_message, reply_markup=keyboard)
            
            logger.info(f"Help command handled for user {user_id}")
        except Exception as e:
            logger.error(f"Error in help command: {e}")
            self.send_error_message(message)
    
    def language_command(self, message):
        """Handle /lang command"""        
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            # Create language selection keyboard
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            uk_btn = types.InlineKeyboardButton("üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data="lang_uk")
            en_btn = types.InlineKeyboardButton("üá∫üá∏ English", callback_data="lang_en")
            back_btn = types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥" if lang == 'uk' else "‚¨ÖÔ∏è Back", callback_data="menu")
            
            keyboard.add(uk_btn, en_btn)
            keyboard.add(back_btn)
            
            if lang == 'uk':
                text = "üåê –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É:"
            else:
                text = "üåê Choose language:"
                
            self.bot.send_message(message.chat.id, text, reply_markup=keyboard)
            
            logger.info(f"Language command handled for user {user_id}")
        except Exception as e:
            logger.error(f"Error in language command: {e}")
            self.send_error_message(message)
    
    def handle_button_callback(self, call):
        """Handle inline keyboard button callbacks"""        
        try:
            user_id = call.from_user.id
            chat_id = call.message.chat.id
            data = call.data
            
            if data == "joke":
                lang = self.get_user_language(user_id)
                joke = self.get_random_joke(user_id, lang)
                
                keyboard = types.InlineKeyboardMarkup(row_width=2)
                if lang == 'uk':
                    new_joke_btn = types.InlineKeyboardButton("üòÑ –©–µ –∂–∞—Ä—Ç", callback_data="joke")
                    ball_btn = types.InlineKeyboardButton("üîÆ –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è", callback_data="8ball")
                    role_btn = types.InlineKeyboardButton("üé≠ –•—Ç–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ", callback_data="whoami")
                    menu_btn = types.InlineKeyboardButton("üì± –ú–µ–Ω—é", callback_data="menu")
                else:
                    new_joke_btn = types.InlineKeyboardButton("üòÑ Another joke", callback_data="joke")
                    ball_btn = types.InlineKeyboardButton("üîÆ Magic 8-Ball", callback_data="8ball")
                    role_btn = types.InlineKeyboardButton("üé≠ Who are you today", callback_data="whoami")
                    menu_btn = types.InlineKeyboardButton("üì± Menu", callback_data="menu")
                    
                keyboard.add(new_joke_btn, ball_btn)
                keyboard.add(role_btn)
                keyboard.add(menu_btn)
                
                formatted_joke = f"üòÑ {joke}"
                self.bot.send_message(chat_id, formatted_joke, reply_markup=keyboard)
                
            elif data == "8ball":
                lang = self.get_user_language(user_id)
                answers = self.magic_answers_uk if lang == 'uk' else self.magic_answers_en
                answer = random.choice(answers)
                
                keyboard = types.InlineKeyboardMarkup(row_width=2)
                if lang == 'uk':
                    again_btn = types.InlineKeyboardButton("üîÆ –ó–Ω–æ–≤—É", callback_data="8ball")
                    joke_btn = types.InlineKeyboardButton("üòÑ –ñ–∞—Ä—Ç", callback_data="joke")
                    role_btn = types.InlineKeyboardButton("üé≠ –•—Ç–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ", callback_data="whoami")
                    menu_btn = types.InlineKeyboardButton("üì± –ú–µ–Ω—é", callback_data="menu")
                    response_text = f"üîÆ –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è –∫–∞–∂–µ:\n\n{answer}"
                else:
                    again_btn = types.InlineKeyboardButton("üîÆ Again", callback_data="8ball")
                    joke_btn = types.InlineKeyboardButton("üòÑ Joke", callback_data="joke")
                    role_btn = types.InlineKeyboardButton("üé≠ Who are you today", callback_data="whoami")
                    menu_btn = types.InlineKeyboardButton("üì± Menu", callback_data="menu")
                    response_text = f"üîÆ Magic 8-Ball says:\n\n{answer}"
                    
                keyboard.add(again_btn, joke_btn)
                keyboard.add(role_btn)
                keyboard.add(menu_btn)
                
                self.bot.send_message(chat_id, response_text, reply_markup=keyboard)
                
            elif data == "whoami":
                lang = self.get_user_language(user_id)
                role = self.get_random_role(user_id, lang)
                
                keyboard = types.InlineKeyboardMarkup(row_width=2)
                if lang == 'uk':
                    again_btn = types.InlineKeyboardButton("üé≠ –ó–Ω–æ–≤—É", callback_data="whoami")
                    joke_btn = types.InlineKeyboardButton("üòÑ –ñ–∞—Ä—Ç", callback_data="joke")
                    ball_btn = types.InlineKeyboardButton("üîÆ –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è", callback_data="8ball")
                    menu_btn = types.InlineKeyboardButton("üì± –ú–µ–Ω—é", callback_data="menu")
                else:
                    again_btn = types.InlineKeyboardButton("üé≠ Again", callback_data="whoami")
                    joke_btn = types.InlineKeyboardButton("üòÑ Joke", callback_data="joke")
                    ball_btn = types.InlineKeyboardButton("üîÆ Magic 8-Ball", callback_data="8ball")
                    menu_btn = types.InlineKeyboardButton("üì± Menu", callback_data="menu")
                    
                keyboard.add(again_btn, joke_btn)
                keyboard.add(ball_btn)
                keyboard.add(menu_btn)
                
                self.bot.send_message(chat_id, role, reply_markup=keyboard)
                
            elif data == "menu":
                lang = self.get_user_language(user_id)
                
                if lang == 'uk':
                    welcome_message = (
                        "üá∫üá¶ –ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –±–æ—Ç –¥–ª—è –ø—Ä–∏–∫–æ–ª—ñ–≤! üëã\n\n"
                        "üé≠ –©–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å?"
                    )
                else:
                    welcome_message = (
                        "üá∫üá∏ Hello! I'm your Ukrainian joke bot! üëã\n\n"
                        "üé≠ What interests you?"
                    )
                    
                keyboard = self.create_main_keyboard(lang)
                self.bot.send_message(chat_id, welcome_message, reply_markup=keyboard)
                
            elif data.startswith("lang_"):
                new_lang = data.split("_")[1]
                self.user_languages[user_id] = new_lang
                
                if new_lang == 'uk':
                    response = "üá∫üá¶ –ú–æ–≤–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É!"
                else:
                    response = "üá∫üá∏ Language changed to English!"
                    
                keyboard = self.create_main_keyboard(new_lang)
                self.bot.send_message(chat_id, response, reply_markup=keyboard)
                
            # Answer callback to remove loading animation
            self.bot.answer_callback_query(call.id)
            
            logger.info(f"Button callback handled: {data} for user {user_id}")
        except Exception as e:
            logger.error(f"Error in button callback: {e}")
            try:
                self.bot.answer_callback_query(call.id, "Error occurred")
            except:
                pass

    def handle_unknown_message(self, message):
        """Handle unknown messages"""
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            if lang == 'uk':
                response = (
                    "ü§î –Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É.\n"
                    "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ! üòä"
                )
            else:
                response = (
                    "ü§î I don't understand this command.\n"
                    "Use the buttons below! üòä"
                )
                
            keyboard = self.create_main_keyboard(lang)
            self.bot.send_message(message.chat.id, response, reply_markup=keyboard)
            
            logger.info(f"Unknown message handled for user {user_id}")
        except Exception as e:
            logger.error(f"Error in unknown message handler: {e}")
            self.send_error_message(message)
    
    def send_error_message(self, message):
        """Send error message to user"""
        try:
            user_id = message.from_user.id
            lang = self.get_user_language(user_id)
            
            if lang == 'uk':
                error_msg = (
                    "üòî –í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.\n"
                    "–°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ"
                )
            else:
                error_msg = (
                    "üòî Sorry, an error occurred.\n"
                    "Try again later or press the button below"
                )
                
            keyboard = self.create_main_keyboard(lang)
            self.bot.send_message(message.chat.id, error_msg, reply_markup=keyboard)
        except Exception as e:
            logger.error(f"Failed to send error message: {e}")
    
    def run(self):
        """Start bot polling"""
        logger.info("Starting bot...")
        
        while True:
            try:
                # Start polling with error handling
                self.bot.infinity_polling(
                    timeout=10,
                    long_polling_timeout=5,
                    none_stop=True,
                    interval=0
                )
            except Exception as e:
                logger.error(f"Bot polling error: {e}")
                logger.info("Restarting bot in 5 seconds...")
                time.sleep(5)

def main():
    """Main function to run the bot"""
    try:
        # Create and run bot
        bot = UkrainianJokeBot()
        print("ü§ñ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –±–æ—Ç –ø—Ä–∏–∫–æ–ª—ñ–≤ –∑–∞–ø—É—â–µ–Ω–∏–π!")
        print("üí° –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏")
        bot.run()
    except KeyboardInterrupt:
        print("\nüëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
        logger.info("Bot stopped by user")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        logger.error(f"Critical error: {e}")
        exit(1)

if __name__ == "__main__":
    main()
